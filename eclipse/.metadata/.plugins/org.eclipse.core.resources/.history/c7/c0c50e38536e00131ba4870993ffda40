package com.nitrogenegames.netcraft;

import com.nitrogenegames.netcraft.item.ItemCoil;
import com.nitrogenegames.netcraft.item.ItemCrafting;

import net.minecraft.block.Block;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

@Mod(modid = Netcraft.modid, name = "Netcraft", version = "Reloaded 0.0.1")
@NetworkMod(clientSideRequired = true, serverSideRequired = false)
public class Netcraft {

	public static final String modid = "netcraft";
	
	//basic crafting for starting	
	public static Item glassfibrecoil;
	public static Item highvoltagecoil;
	public static Block core;
	public static Item netdatachip;
	public static Block matrixcube;
	public static Item communicator;
	public static Item centraldatachip;
	public static Block node;
	public static Item connector;
	public static Item superdatachip;
	public static Item forcefieldemitters;
	public static Item nuclearalloy; //texture

	//modules
	public static Item design;
	public static Item redmodule;
	public static Item deathmodule;
	public static Item powermodule;
	public static Item regenmodule;
	public static Item resistmodule;
	public static Item weathermodule; //req
	public static Item timemodule; //req
	public static Item tpmodule; 
	public static Item atpmodule; 

	//nodes
	public static Block connectionnode;
	public static Block conditionalnode;
	public static Block inputnode; //req, 1.6

	//upgrades
	public static Item baseupgrade;
	public static Item euupgrade;
	public static Item storageupgrade;
	public static Item rangeupgrade;
	public static Item capacitorupgrade;
	public static Item coreupgrade;
	//misc

	public static CreativeTabs netcrafttab;

	
	@EventHandler
	public void load(FMLInitializationEvent e){
		netcrafttab = new CreativeTabs("netcraft"){
			@SideOnly(Side.CLIENT)
			public int getTabIconItemIndex(){
				return design.itemID;
			}
		}
		
		//declarations
		glassfibrecoil = new ItemCoil(3813).setUnlocalizedName("glassfibrecoil");
		highvoltagecoil = new ItemCoil(3814).setUnlocalizedName("highvoltagecoil");
		netdatachip = new ItemCrafting(3816, false).setUnlocalizedName("netdatachip");
		core= new BlockCore(3817, "core").setUnlocalizedName("core").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		matrixcube= new BlockMatrixCube(3815, "matrixcube").setUnlocalizedName("matrixcube").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		communicator = new ItemCrafting(3819, false).setUnlocalizedName("communicator");
		centraldatachip = new ItemCrafting(3820, false).setUnlocalizedName("centraldatachip");
		connector = new ItemCrafting(3826, false).setUnlocalizedName("connector");;
		design = new ItemModuleBase(3834).setUnlocalizedName("design");
		redmodule = new ItemModules(3831).setUnlocalizedName("redmodule");
		deathmodule = new ItemModules(3832).setUnlocalizedName("deathmodule");
		powermodule = new ItemModules(3833).setUnlocalizedName("powermodule");
		node= new BlockNodeBase(3821, "node").setUnlocalizedName("node").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		connectionnode= new BlockNodeConnection(3823, "connectionnode").setUnlocalizedName("connectionnode").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		conditionalnode= new BlockNodeCondition(3825, "conditionalnode").setUnlocalizedName("conditionalnode").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		regenmodule = new ItemModules(3835).setUnlocalizedName("regenmodule");
		resistmodule = new ItemModules(3836).setUnlocalizedName("resistmodule");
		weathermodule = new ItemModules(3837).setUnlocalizedName("weathermodule");
		timemodule = new ItemModules(3838).setUnlocalizedName("timemodule");
		inputnode= new BlockNodeInput(3839, "inputnode").setUnlocalizedName("inputnode").setHardness(4.0F).setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		tpmodule = new ItemModules(3840).setUnlocalizedName("tpmodule");
		atpmodule = new ItemModules(3841).setUnlocalizedName("atpmodule");
		euupgrade = new ItemUpgrade(3827).setUnlocalizedName("euupgrade");
		storageupgrade = new ItemUpgrade(3828).setUnlocalizedName("storageupgrade");
		rangeupgrade = new ItemUpgrade(3829).setUnlocalizedName("rangeupgrade");
		capacitorupgrade = new ItemUpgrade(3830).setUnlocalizedName("capacitorupgrade");
		coreupgrade = new ItemUpgrade(3842).setUnlocalizedName("coreupgrade");
		baseupgrade = new ItemCrafting(3843, false).setUnlocalizedName("baseupgrade");
		superdatachip = new ItemCrafting(3844, true).setUnlocalizedName("superdatachip");
		forcefieldemitters = new ItemCrafting(3845, false).setUnlocalizedName("forcefieldemitters");
		nuclearalloy = new ItemCrafting(3846, true).setUnlocalizedName("nuclearalloy");
	}
	
	public void registerBlock(Block block, String string, String name){
		GameRegistry.registerBlock(block,string);
		LanguageRegistry.addName(block, name);
	}
	
	public void registerItem(Item item, String string, String name){
		GameRegistry.registerItem(item,string);
		LanguageRegistry.addName(item, name);
	}
}
